# === Configure your details here ===
app.name=John Doe
app.regNo=REG12347
app.email=john@example.com

# Put your final SQL for odd/even (based on last two digits of regNo)
app.finalQueryOdd=SELECT 
p.AMOUNT AS SALARY,
CONCAT(e.FIRST_NAME, ' ', e.LAST_NAME) AS NAME,
TIMESTAMPDIFF(YEAR, e.DOB, CURDATE()) AS AGE,
d.DEPARTMENT_NAME
FROM PAYMENTS p
JOIN EMPLOYEE e ON p.EMP_ID = e.EMP_ID
JOIN DEPARTMENT d ON e.DEPARTMENT = d.DEPARTMENT_ID
WHERE DAY(p.PAYMENT_TIME) <> 1
ORDER BY p.AMOUNT DESC
LIMIT 1;

app.finalQueryEven=SELECT 
e1.EMP_ID,
e1.FIRST_NAME,
e1.LAST_NAME,
d.DEPARTMENT_NAME,
COUNT(e2.EMP_ID) AS YOUNGER_EMPLOYEES_COUNT
FROM EMPLOYEE e1
JOIN DEPARTMENT d ON e1.DEPARTMENT = d.DEPARTMENT_ID
LEFT JOIN EMPLOYEE e2 
ON e1.DEPARTMENT = e2.DEPARTMENT
AND e2.DOB > e1.DOB   -- younger employees (born after e1)
GROUP BY e1.EMP_ID, e1.FIRST_NAME, e1.LAST_NAME, d.DEPARTMENT_NAME
ORDER BY e1.EMP_ID DESC;


# Endpoints from the problem statement
api.generateWebhook=https://bfhldevapigw.healthrx.co.in/hiring/generateWebhook/JAVA
# We'll prefer the 'webhook' field returned by the first API; fallback to this fixed endpoint if not present
api.submitFallback=https://bfhldevapigw.healthrx.co.in/hiring/testWebhook/JAVA

# Logging
logging.level.root=INFO
logging.level.com.wizardking.bfh=DEBUG
